@model Oglasi_Proekt_IT.Models.Ad

@{
    ViewBag.Title = "Create";
}




@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
<div id="create-form" class="form-horizontal">
    <h2 class="h2create">Create a new ad</h2>

    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    @Html.HiddenFor(model => model.Username, new { id = "natureOfVisitField", Value = "DEFAULT" })
<div class="row">
    <div class="column">
        <div class="form-group">

            <div class="col-md-10 input levo">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", placeholder = "Email" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">

            <div class="col-md-10 input levo">
                @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control", placeholder = "Phone" } })
                @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">

            <div class="col-md-10 input levo">
                @Html.EditorFor(model => model.Viber, new { htmlAttributes = new { @class = "form-control", placeholder = "Viber" } })
                @Html.ValidationMessageFor(model => model.Viber, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">

            <div class="col-md-10 input levo">
                @Html.DropDownListFor(m => m.Location, new SelectList(Enum.GetValues(typeof(Oglasi_Proekt_IT.Models.Cities))), "Select a city", new { id = "dropdown" })
                @Html.ValidationMessageFor(model => model.Location, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="column desna">
        <div class="form-group">

            <div class="col-md-10 input desno">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control", placeholder = "Title" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">

            <div class="col-md-10 input desno">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control", placeholder = "Description" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">

            <div class="col-md-10 input desno">
                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control", placeholder = "Price" } })
                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">

            <div class="col-md-10 input desno">
                @Html.EditorFor(model => model.ImageURL, new { htmlAttributes = new { @class = "form-control", placeholder = "Image URL" } })
                @Html.ValidationMessageFor(model => model.ImageURL, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>


  </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input id="submit-button" type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    
</div>
    
}

<style>
    body {
        margin: 0;
        background-image: url('../../Style/Images/v1.png');
        background-position: center;
        background-repeat: no-repeat;
        background-size: cover;
    }
</style>



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
